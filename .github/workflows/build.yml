name: Build
on:
  push:
    branches:
      - master # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    #strategy:
    #  matrix:
    #    python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint bandit pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      #- name: Lint with flake8
      #  run: |
      #    stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Test with pytest
      #     run: |
      #       pytest
      - name: Run tests
        working-directory: ./comp-cli
        run: ./run_tests.sh
      - name: Run linters
        working-directory: ./comp-cli
        run: ./run_linters.sh
      - name: Analyze CLI comp
        uses: docker://sonarsource/sonar-scanner-cli:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_PROJECT_BASE_DIR: comp-cli
        with:
          sonar.projectBaseDir: comp-cli
          sonar.qualitygate.wait: false
